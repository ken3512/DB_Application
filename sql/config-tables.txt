CREATE TABLE `University` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `Name` varchar(200) NOT NULL UNIQUE,
  `Bio` varchar(255),
  `GmailAt` varchar(200) NOT NULL UNIQUE,
  `DateTimeCreated` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `DateTimeUpdated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`)
);

CREATE TABLE `Users` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `UniversityID` int NOT NULL REFERENCES University(ID),
CONSTRAINT FK_User_Unvi FOREIGN KEY (UniversityID) REFERENCES University(ID),
  `Super` boolean NOT NULL DEFAULT  0,
  `Name` varchar(255)  NOT NULL DEFAULT '',
  `Gmail` varchar(255) NOT NULL DEFAULT '',
  `Phone` varchar(255),
  `Password` varchar(255),
  `DateTimeCreated` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `DateTimeUpdated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`)
);

CREATE TABLE `RSO` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `UniversityID` int NOT NULL REFERENCES University(ID),
  `OwnerID` int NOT NULL REFERENCES Users(ID),
CONSTRAINT FK_RSO_Unvi FOREIGN KEY (UniversityID) REFERENCES University(ID),
CONSTRAINT FK_RSO_User FOREIGN KEY (OwnerID) REFERENCES Users(ID),
  `Name` varchar(255) NOT NULL DEFAULT '',
  `DateTimeCreated` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `DateTimeUpdated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`)
);

CREATE TABLE `Location` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `Name` varchar(255),
  `Longitude` int,
  `Latitude` int,
  `DateTimeCreated` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `DateTimeUpdated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`)
);

CREATE TABLE `Categories` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `Name` varchar(255) NOT NULL UNIQUE,
  PRIMARY KEY (`ID`)
);

CREATE TABLE `Registered` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `RSOID` int NOT NULL REFERENCES RSO(ID),
  `UserID` int NOT NULL REFERENCES Users(ID),
CONSTRAINT FK_Reg_RSO FOREIGN KEY (RSOID) REFERENCES RSO(ID),
CONSTRAINT FK_Reg_User FOREIGN KEY (UserID) REFERENCES Users(ID),
  `DateTimeCreated` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `DateTimeUpdated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`)
);

CREATE TABLE `Events` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `LocationID` int NOT NULL REFERENCES Location(ID),
  `EventCat` int NOT NULL REFERENCES Categories(ID),
  `ForeignID` int,
CONSTRAINT FK_Events_Loc FOREIGN KEY (LocationID) REFERENCES Location(ID),
CONSTRAINT FK_Events_Eve FOREIGN KEY (EventCat) REFERENCES Categories(ID),
  `Name` varchar(255) NOT NULL DEFAULT '',
  `Description` varchar(255) NOT NULL DEFAULT '',
  `NumRat` int,
  `WeighRat` int,
  `Privacy` int,
  `ContactPhone` varchar(255),
  `ContactEmail` varchar(255) NOT NULL DEFAULT '',
  `DateTimeCreated` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `DateTimeUpdated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`)
);

CREATE TABLE `Ratings` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `EventID` int NOT NULL REFERENCES Events(ID),
  `UserID` int NOT NULL REFERENCES Users(ID),
CONSTRAINT FK_Rat_Eve FOREIGN KEY (EventID) REFERENCES Events(ID),
CONSTRAINT FK_Rat_User FOREIGN KEY (UserID) REFERENCES Users(ID),
  `Rating` int,
  `DateTimeCreated` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `DateTimeUpdated`  timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`)
);

CREATE TABLE `Comments` (
  `ID` Int NOT NULL AUTO_INCREMENT,
  `EventID` int NOT NULL REFERENCES Events(ID),
  `UserID` int NOT NULL REFERENCES Users(ID),
CONSTRAINT FK_Com_Eve FOREIGN KEY (EventID) REFERENCES Events(ID),
CONSTRAINT FK_Com_User FOREIGN KEY (UserID) REFERENCES Users(ID),
  `Text` varchar(255) NOT NULL DEFAULT '',
  `DateTimeCreated` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `DateTimeUpdated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`)
);
